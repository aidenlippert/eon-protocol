/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILendingPool,
  ILendingPoolInterface,
} from "../../../contracts/HealthFactorMonitor.sol/ILendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "getLoan",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ILendingPool__factory {
  static readonly abi = _abi;
  static createInterface(): ILendingPoolInterface {
    return new Interface(_abi) as ILendingPoolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILendingPool {
    return new Contract(address, _abi, runner) as unknown as ILendingPool;
  }
}
