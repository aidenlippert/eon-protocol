/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ScoreOraclePhase3,
  ScoreOraclePhase3Interface,
} from "../../contracts/ScoreOraclePhase3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "baseAPR",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minAPR",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxAPR",
        type: "uint16",
      },
    ],
    name: "APRConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "s1",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "s2",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "int16",
        name: "s3",
        type: "int16",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "s4",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "s5",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "overall",
        type: "uint16",
      },
    ],
    name: "ScoreComputed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SCORE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SCORE",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEIGHT_COLLATERAL",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEIGHT_CROSSCHAIN",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEIGHT_PARTICIPATION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEIGHT_REPAYMENT",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WEIGHT_SYBIL",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
    ],
    name: "computeScore",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "s1_repayment",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "s2_collateral",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "s3_sybil",
            type: "int16",
          },
          {
            internalType: "uint8",
            name: "s4_crosschain",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "s5_participation",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "overall",
            type: "uint16",
          },
        ],
        internalType: "struct ScoreOraclePhase3.ScoreBreakdown",
        name: "breakdown",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "overall",
        type: "uint16",
      },
    ],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "aprBps",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "overall",
        type: "uint16",
      },
    ],
    name: "getScoreTier",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maxAge",
        type: "uint256",
      },
    ],
    name: "hasRecentActivity",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract CreditRegistryV2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_baseAPR",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_minAPR",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_maxAPR",
        type: "uint16",
      },
    ],
    name: "setAPRConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_registry",
        type: "address",
      },
    ],
    name: "setRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type ScoreOraclePhase3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScoreOraclePhase3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScoreOraclePhase3__factory extends ContractFactory {
  constructor(...args: ScoreOraclePhase3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      ScoreOraclePhase3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ScoreOraclePhase3__factory {
    return super.connect(runner) as ScoreOraclePhase3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScoreOraclePhase3Interface {
    return new Interface(_abi) as ScoreOraclePhase3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ScoreOraclePhase3 {
    return new Contract(address, _abi, runner) as unknown as ScoreOraclePhase3;
  }
}
