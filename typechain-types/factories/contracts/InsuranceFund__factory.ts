/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  InsuranceFund,
  InsuranceFundInterface,
} from "../../contracts/InsuranceFund";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "requestor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "AuthorizedRequestorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTotal",
        type: "uint256",
      },
    ],
    name: "FundsDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lossAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coveredAmount",
        type: "uint256",
      },
    ],
    name: "LossCovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolRevenue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocationAmount",
        type: "uint256",
      },
    ],
    name: "RevenueAllocated",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_COVERAGE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_COVERAGE_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERCENTAGE_DENOMINATOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVENUE_ALLOCATION_PERCENT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVENUE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "protocolRevenue",
        type: "uint256",
      },
    ],
    name: "allocateRevenue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "authorizedRequestors",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    name: "canCoverLoss",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lossAmount",
        type: "uint256",
      },
    ],
    name: "coverLoss",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "coverageHistory",
    outputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "lender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lossAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "coveredAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    name: "getAvailableCoverage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "getCoverageHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "loanId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lossAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coveredAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InsuranceFund.CoverageRecord[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCoverageHistoryCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "getDefaultHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "loanId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "lossAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "coveredAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct InsuranceFund.CoverageRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
    ],
    name: "getMaxCoveragePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getStatistics",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalFunds",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalCovered",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_totalDefaults",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_utilizationRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lenderContributions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "requestor",
        type: "address",
      },
      {
        internalType: "bool",
        name: "authorized",
        type: "bool",
      },
    ],
    name: "setAuthorizedRequestor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCovered",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDefaults",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161164f38038061164f83398101604081905261002f916100c4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610074565b50600180556001600160a01b03166080526100f4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d657600080fd5b81516001600160a01b03811681146100ed57600080fd5b9392505050565b60805161152461012b600039600081816103f30152818161054a0152818161069601528181610a390152610da901526115246000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063905ab15e116100f9578063b97fbee711610097578063e1f1c4a711610071578063e1f1c4a7146103dc578063e31e271c146103e5578063e9cbd822146103ee578063f2fde38b1461041557600080fd5b8063b97fbee7146103ad578063c3e06f1b146103c0578063dc0bfcb5146103d357600080fd5b8063a1fafc98116100d3578063a1fafc981461035f578063acfd5c9114610372578063b3cd425414610392578063b6b55f251461039a57600080fd5b8063905ab15e1461034d578063968ed600146103565780639da1a8631461021a57600080fd5b80635312ea8e1161016657806374c4385d1161014057806374c4385d146102a25780637baa65aa146102e55780637f8c5517146103055780638da5cb5b1461032857600080fd5b80635312ea8e146102675780635c8d40ac1461027a578063715018a61461029a57600080fd5b80632aa7a168116101a25780632aa7a1681461021a578063303ea1b714610222578063372d6b27146102375780633c65ddd31461025f57600080fd5b806303fdd167146101c95780631008a61d146101f1578063110282db14610212575b600080fd5b6101dc6101d736600461123b565b610428565b60405190151581526020015b60405180910390f35b6102046101ff36600461123b565b61043b565b6040519081526020016101e8565b610204600581565b610204601981565b61023561023036600461123b565b61046b565b005b61023f6105cf565b6040805194855260208501939093529183015260608201526080016101e8565b600754610204565b61023561027536600461123b565b61061a565b610204610288366004611270565b60066020526000908152604090205481565b6102356106fc565b6102b56102b036600461123b565b610710565b604080519586526001600160a01b039094166020860152928401919091526060830152608082015260a0016101e8565b6102f86102f336600461123b565b61075b565b6040516101e8919061128b565b6101dc610313366004611270565b60056020526000908152604090205460ff1681565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b61020460045481565b61020460025481565b61020461036d3660046112c9565b610858565b610385610380366004611302565b610bce565b6040516101e89190611324565b610204606481565b6102356103a836600461123b565b610d4f565b6102356103bb3660046113b1565b610e7d565b6102046103ce36600461123b565b610ee4565b61020460035481565b61020461271081565b6102046101f481565b6103357f000000000000000000000000000000000000000000000000000000000000000081565b610235610423366004611270565b610efe565b6000806104348361043b565b1192915050565b60008061271061044c6019856113fe565b6104569190611415565b905061046460025482610f39565b9392505050565b3360009081526005602052604090205460ff168061049357506000546001600160a01b031633145b6104d55760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064015b60405180910390fd5b6104dd610f4f565b600081116105225760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b60448201526064016104cc565b600060646105316005846113fe565b61053b9190611415565b90506105726001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610f79565b80600260008282546105849190611437565b909155505060408051838152602081018390527fcc20df2e6115f65d438c80b313a169bcb1838118c200233b3f7c86762a6968a8910160405180910390a1506105cc60018055565b50565b6002546003546004546000806105e58486611437565b9050600081116105f6576000610611565b8061271060035461060791906113fe565b6106119190611415565b91505090919293565b610622610fe6565b61062a610f4f565b6002548111156106715760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016104cc565b8060026000828254610683919061144a565b909155506106bd90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383611013565b60405181815233907f23d6711a1d031134a36921253c75aa59e967d38e369ac625992824315e204f20906020015b60405180910390a26105cc60018055565b610704610fe6565b61070e6000611049565b565b6007818154811061072057600080fd5b6000918252602090912060059091020180546001820154600283015460038401546004909401549294506001600160a01b0390911692909185565b610763611203565b60005b60075481101561081b5782600782815481106107845761078461145d565b9060005260206000209060050201600001540361080957600781815481106107ae576107ae61145d565b60009182526020918290206040805160a08101825260059093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260049091015460808201529392505050565b8061081381611473565b915050610766565b506040518060a001604052806000815260200160006001600160a01b03168152602001600081526020016000815260200160008152509050919050565b3360009081526005602052604081205460ff168061088057506000546001600160a01b031633145b6108bd5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b60448201526064016104cc565b6108c5610f4f565b6001600160a01b0385166109145760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206c656e646572206164647265737360501b60448201526064016104cc565b600082116109645760405162461bcd60e51b815260206004820152601760248201527f4c6f737320616d6f756e74206d757374206265203e203000000000000000000060448201526064016104cc565b60006127106109746019866113fe565b61097e9190611415565b9050600061099761099160025484610f39565b85610f39565b90506002548111156109e05760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e742066756e647360701b60448201526064016104cc565b8015610bba5780600260008282546109f8919061144a565b925050819055508060036000828254610a119190611437565b909155505060048054906000610a2683611473565b90915550610a6090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168883611013565b6040805160a0810182528781526001600160a01b0389811660208084018281528486018a81526060860188815242608088019081526007805460018101825560009190915297517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68860059099029889015592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c689880180546001600160a01b0319169190971617909555517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68a86015592517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68b85015591517fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68c909301929092558251878152908101849052909188917f42a55bd777a4e159cfa82f37ae454ed6ef8f578d2bc41a32f966ec2ddc6d044b910160405180910390a35b915050610bc660018055565b949350505050565b6007546060908310610c185760405162461bcd60e51b8152602060048201526013602482015272092dcecc2d8d2c840e6e8c2e4e840d2dcc8caf606b1b60448201526064016104cc565b6000610c2f610c278486611437565b600754610f39565b90506000610c3d858361144a565b905060008167ffffffffffffffff811115610c5a57610c5a61148c565b604051908082528060200260200182016040528015610c9357816020015b610c80611203565b815260200190600190039081610c785790505b50905060005b82811015610d43576007610cad8289611437565b81548110610cbd57610cbd61145d565b60009182526020918290206040805160a08101825260059093029091018054835260018101546001600160a01b0316938301939093526002830154908201526003820154606082015260049091015460808201528251839083908110610d2557610d2561145d565b60200260200101819052508080610d3b90611473565b915050610c99565b50925050505b92915050565b610d57610f4f565b60008111610d9c5760405162461bcd60e51b81526020600482015260126024820152710416d6f756e74206d757374206265203e20360741b60448201526064016104cc565b610dd16001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610f79565b8060026000828254610de39190611437565b90915550503360009081526006602052604081208054839290610e07908490611437565b909155505060405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a260025460405133917fbee4fe3675934fca827426c793623996a3079255089bda3a717019ffc5db2765916106eb91858252602082015260400190565b610e85610fe6565b6001600160a01b038216600081815260056020908152604091829020805460ff191685151590811790915591519182527f088de5fc2816de687704debc52f916fa2796f3ebf3fd2af51e81a105cc70d710910160405180910390a25050565b6000612710610ef46019846113fe565b610d499190611415565b610f06610fe6565b6001600160a01b038116610f3057604051631e4fbdf760e01b8152600060048201526024016104cc565b6105cc81611049565b6000818310610f485781610464565b5090919050565b600260015403610f7257604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b038481166024830152838116604483015260648201839052610fe09186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611099565b50505050565b6000546001600160a01b0316331461070e5760405163118cdaa760e01b81523360048201526024016104cc565b6040516001600160a01b0383811660248301526044820183905261104491859182169063a9059cbb90606401610fae565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006110ae6001600160a01b038416836110fc565b905080516000141580156110d35750808060200190518101906110d191906114a2565b155b1561104457604051635274afe760e01b81526001600160a01b03841660048201526024016104cc565b60606104648383600084600080856001600160a01b0316848660405161112291906114bf565b60006040518083038185875af1925050503d806000811461115f576040519150601f19603f3d011682016040523d82523d6000602084013e611164565b606091505b509150915061117486838361117e565b9695505050505050565b6060826111935761118e826111da565b610464565b81511580156111aa57506001600160a01b0384163b155b156111d357604051639996b31560e01b81526001600160a01b03851660048201526024016104cc565b5080610464565b8051156111ea5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6040518060a001604052806000815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b60006020828403121561124d57600080fd5b5035919050565b80356001600160a01b038116811461126b57600080fd5b919050565b60006020828403121561128257600080fd5b61046482611254565b815181526020808301516001600160a01b03169082015260408083015190820152606080830151908201526080808301519082015260a08101610d49565b600080600080608085870312156112df57600080fd5b6112e885611254565b966020860135965060408601359560600135945092505050565b6000806040838503121561131557600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b8181101561139757611384838551805182526020808201516001600160a01b0316908301526040808201519083015260608082015190830152608090810151910152565b9284019260a09290920191600101611340565b50909695505050505050565b80151581146105cc57600080fd5b600080604083850312156113c457600080fd5b6113cd83611254565b915060208301356113dd816113a3565b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610d4957610d496113e8565b60008261143257634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610d4957610d496113e8565b81810381811115610d4957610d496113e8565b634e487b7160e01b600052603260045260246000fd5b600060018201611485576114856113e8565b5060010190565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156114b457600080fd5b8151610464816113a3565b6000825160005b818110156114e057602081860181015185830152016114c6565b50600092019182525091905056fea264697066735822122034cec446158bb3a5fff486ee1c37f582909b17c02a6187115b4375e3d3b1b69564736f6c63430008140033";

type InsuranceFundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsuranceFundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsuranceFund__factory extends ContractFactory {
  constructor(...args: InsuranceFundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stablecoin, overrides || {});
  }
  override deploy(
    _stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stablecoin, overrides || {}) as Promise<
      InsuranceFund & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): InsuranceFund__factory {
    return super.connect(runner) as InsuranceFund__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsuranceFundInterface {
    return new Interface(_abi) as InsuranceFundInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): InsuranceFund {
    return new Contract(address, _abi, runner) as unknown as InsuranceFund;
  }
}
