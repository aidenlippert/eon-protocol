/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CreditVaultV3,
  CreditVaultV3Interface,
} from "../../contracts/CreditVaultV3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_oracle",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceOracle",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "GracePeriodStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "principalUsd18",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "LoanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "LoanLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountUsd18",
        type: "uint256",
      },
    ],
    name: "LoanRepaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "GRACE_BRONZE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_GOLD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_PLATINUM",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GRACE_SILVER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "INSURANCE_SHARE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATOR_SHARE_BPS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_HEALTH_FACTOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "principalUsd18",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "calculateDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "insurancePool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [
      {
        internalType: "contract ScoreOraclePhase3B",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceOracle",
    outputs: [
      {
        internalType: "contract ChainlinkPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract CreditRegistryV3",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountUsd18",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "setAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_insurancePool",
        type: "address",
      },
    ],
    name: "setInsurancePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "vaultLoans",
    outputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "aprBps",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "startTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "graceStart",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461011357601f620017f138819003918201601f19168301916001600160401b03831184841017610118578084926060946040528339810103126101135780516001600160a01b0380821682036101135761006a60406100636020860161012e565b940161012e565b33156100fa57816000549460018060a01b031994338688161760005560405196833391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001805560025490610100600160a81b039060081b1690610100600160a81b0319161760025516836003541617600355169060045416176004556116ae9081620001438239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101135756fe6040608081526004908136101561001557600080fd5b60009160e08335811c9081631d1a54ce14610d625781632630c12f14610d3a57816328cd5a9914610d125781633f4ba83a14610ca8578163415f124014610c745781634f0f29f414610c555781635c975abb14610c3057816364ca1c6914610bc1578163715018a614610b675781637b10399914610b395781637dc0d1d014610b0f5781638456cb5914610ab35781638da5cb5b14610a8a578163a94c487e14610a4a578163ab2adc0014610a20578163b32a531414610a01578163b5627e42146109dd578163c1bce0b714610553578163c41c22fc1461054e578163cb0dc99d14610476578163d850342f14610457578163d8aed1451461023257508063dd94932814610210578063f11b8188146101c55763f2fde38b1461013757600080fd5b346101c15760203660031901126101c157610150610d7f565b90610159610d95565b6001600160a01b039182169283156101ab575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b82843461020d57602036600319011261020d576001600160a01b03908290826101ec610d7f565b168152600560205220549082519160ff81161515835260081c166020820152f35b80fd5b50503461022e578160031936011261022e57602090516201fa408152f35b5080fd5b91929050346103a157806003193601126103a1578235916024803594610256610f9f565b61025e610f81565b84875260066020528387209161027a60ff600585015416610fc2565b6002548551632820036560e11b81528381018890526001600160a01b039560089290921c8616919081818581865afa91821561044d578b92610420575b505060a08101518481101561040e5786916102d6600160209314611085565b01511633036103dd576102e887611449565b928389116103a55790899291813b156103a157604489918580948d8c519788968795638ef6dce960e01b87528601528401525af180156103975761037f575b5050851015610364575b5050519182527f512d3e65b3e58c2187bb1872aa435dba5bd09c1c03823ba56ab70aac411e4a2160203393a36001805580f35b6001610378928254169101549033906110c3565b3880610331565b61038890610dc1565b610393578638610327565b8680fd5b86513d84823e3d90fd5b8380fd5b60649060138460208a519362461bcd60e51b855284015282015272105b5bdd5b9d08195e18d959591cc81919589d606a1b6044820152fd5b855162461bcd60e51b8152602081850152600c818401526b2737ba103137b93937bbb2b960a11b6044820152606490fd5b634e487b7160e01b8b5260218552838bfd5b61043f9250803d10610446575b6104378183610e23565b810190611013565b38806102b7565b503d61042d565b88513d8d823e3d90fd5b5050503461022e578160031936011261022e57602090516203f4808152f35b8285853461022e57606036600319011261022e57610492610d7f565b906024356001600160a01b0381811692918390036105495760443593841515809503610545576104c0610d95565b82519483860186811067ffffffffffffffff8211176105305761050c959697985084528652602086019485521685526005602052842092511515839060ff801983541691151516179055565b518154610100600160a81b03191660089190911b610100600160a81b031617905580f35b604189634e487b7160e01b6000525260246000fd5b8580fd5b600080fd5b610d62565b848484346101c15760603660031901126101c15761056f610d7f565b936024359060443592610580610f9f565b610588610f81565b60018060a01b03958688169283825260209860058a5260ff8884205416156109a657851561097157861561093d576024828a600354168a51928380926331751b7f60e21b8252338a8301525afa92831561087657849361090e575b50506105fd866105f761ffff855116611608565b9261158f565b9060648802908882046064036108fb5761ffff61061b911683610ef0565b106108c25787516323b872dd60e01b8b8201523360248201523060448201526064808201889052815260a0810167ffffffffffffffff8111828210176108af578a929161066a918b5287610f19565b600254895163026668bd60e61b815233878201908152602081018b9052909b8d928d92909183918991908390604001039360081c165af1998a1561087657849a610880575b508160025460081c169061ffff84511691803b15610545579060848c8780948e519687958694631b99c5c160e31b86528d8601528d6024860152604485015260648401525af1801561087657610863575b508961ffff826003541693511660248a518095819363fb4ceaa360e01b8352898301525afa918215610859579183918b938b96959261080e575b50916107d596959391600595938b519761075389610deb565b8852838801908a825261ffff8d8a01931683528c60608a0194428652600660808c019782895260a08d019a60018c52835252209851166001600160601b0360a01b89541617885551600188015561ffff6002880191511661ffff19825416179055516003860155519084015551151591019060ff801983541691151516179055565b825191825284820152827f3373919ad665425d2cddb4072830e5935b6ee308440fa99b23383648da473bc0833393a36001805551908152f35b9294955092905081813d8311610852575b6108298183610e23565b810103126101c15792896005938a936108456107d59897610e45565b929496975090929461073a565b503d61081f565b88513d85823e3d90fd5b61086f90939193610dc1565b918a610700565b89513d86823e3d90fd5b9099508a81813d83116108a8575b6108988183610e23565b810103126103a15751988b6106af565b503d61088e565b634e487b7160e01b855260418652602485fd5b875162461bcd60e51b81528085018b9052601360248201527222bc31b2b2b2399030b63637bbb2b210262a2b60691b6044820152606490fd5b634e487b7160e01b855260118652602485fd5b61092e929350803d10610936575b6109268183610e23565b810190610e62565b908a806105e3565b503d61091c565b875162461bcd60e51b81528085018b9052600e60248201526d16995c9bc81c1c9a5b98da5c185b60921b6044820152606490fd5b875162461bcd60e51b81528085018b9052600f60248201526e16995c9bc818dbdb1b185d195c985b608a1b6044820152606490fd5b875162461bcd60e51b81528085018b90526011602482015270105cdcd95d081b9bdd08185b1b1bddd959607a1b6044820152606490fd5b5050503461022e578160031936011261022e57602090516710a741a4627800008152f35b5050503461022e578160031936011261022e5760209051620151808152f35b5050503461022e578160031936011261022e5760075490516001600160a01b039091168152602090f35b843461020d57602036600319011261020d57610a64610d7f565b610a6c610d95565b60018060a01b03166001600160601b0360a01b600754161760075580f35b5050503461022e578160031936011261022e57905490516001600160a01b039091168152602090f35b5050503461022e578160031936011261022e5760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25891610af2610d95565b610afa610f81565b600160ff19600254161760025551338152a180f35b5050503461022e578160031936011261022e5760035490516001600160a01b039091168152602090f35b5050503461022e578160031936011261022e57600254905160089190911c6001600160a01b03168152602090f35b843461020d578060031936011261020d57610b80610d95565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b505090346101c15760203660031901126101c1578060c0938335815260066020522060018060a01b038154169260018201549261ffff6002840154169060ff600560038601549486015495015416948151968752602087015285015260608401526080830152151560a0820152f35b5050503461022e578160031936011261022e5760209060ff6002541690519015158152f35b5050503461022e578160031936011261022e57602090516202a3008152f35b84833461022e57602036600319011261022e57610ca190610c93610f9f565b610c9b610f81565b35611106565b6001805580f35b5050346101c157826003193601126101c157610cc2610d95565b6002549060ff821615610d04575060ff1916600255513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b5050913461020d57602036600319011261020d5750610d3360209235611449565b9051908152f35b5050346101c157826003193601126101c1575490516001600160a01b03909116815260209150f35b346105495760003660031901126105495760206040516101f48152f35b600435906001600160a01b038216820361054957565b6000546001600160a01b03163303610da957565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff8111610dd557604052565b634e487b7160e01b600052604160045260246000fd5b60c0810190811067ffffffffffffffff821117610dd557604052565b60e0810190811067ffffffffffffffff821117610dd557604052565b90601f8019910116810190811067ffffffffffffffff821117610dd557604052565b519061ffff8216820361054957565b519060ff8216820361054957565b908160e09103126105495760c060405191610e7c83610e07565b610e8581610e45565b8352610e9360208201610e54565b6020840152610ea460408201610e54565b6040840152610eb560608201610e54565b6060840152610ec660808201610e54565b6080840152610ed760a08201610e54565b60a084015201518060010b81036105495760c082015290565b81810292918115918404141715610f0357565b634e487b7160e01b600052601160045260246000fd5b906000602091828151910182855af115610f75576000513d610f6c57506001600160a01b0381163b155b610f4a5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b60011415610f43565b6040513d6000823e3d90fd5b60ff60025416610f8d57565b60405163d93c066560e01b8152600490fd5b600260015414610fb0576002600155565b604051633ee5aeb560e01b8152600490fd5b15610fc957565b60405162461bcd60e51b815260206004820152600e60248201526d131bd85b881b9bdd08199bdd5b9960921b6044820152606490fd5b51906001600160a01b038216820361054957565b908160e0910312610549576040519061102b82610e07565b8051825261103b60208201610fff565b602083015260408101516040830152606081015160608301526080810151608083015260a081015160048110156105495760a083015261107d9060c001610fff565b60c082015290565b1561108c57565b60405162461bcd60e51b815260206004820152600f60248201526e4c6f616e206e6f742061637469766560881b6044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152611104916110ff606483610e23565b610f19565b565b600081815260066020526040918282209261112760ff600586015416610fc2565b6002548151632820036560e11b8152600481018490526001600160a01b03949160e0908290602490829060081c89165afa9081156112f65782916112d8575b5060a081015160048110156112c45790611184600160209314611085565b0161119385825116878661130d565b156112bc5784905116938060018701549654166101f48088029088820414881517156112a857906127106111fe9204906111cd8280611300565b916111d8838b61143c565b906111e48133856110c3565b85600754169081611297575b505080611286575b5061158f565b9060025460081c1690813b156101c1578291604483928651958693849263134d564f60e21b84528a600485015260248401525af190811561127b575061126c575b50519283527fe4b3cb24da49cbaa1989989a720518b9c8c12f4a6e0d848853745d9271104b0f60203394a4565b61127590610dc1565b3861123f565b8351903d90823e3d90fd5b6112919089836110c3565b386111f8565b6112a191846110c3565b38806111f0565b634e487b7160e01b84526011600452602484fd5b505050505050565b634e487b7160e01b83526021600452602483fd5b6112f0915060e03d8111610446576104378183610e23565b38611166565b83513d84823e3d90fd5b91908201809211610f0357565b9161131783611449565b825460018401546001600160a01b0393929160e09161133791861661158f565b6003546040516331751b7f60e21b81529486166004860152909484916024918391165afa918215610f755760009261141c575b5061ffff92600a8461137e81865116611608565b160190848211610f0357606483029280840460641490151715610f0357846113a7921690610ef0565b10611413576004916113ba91511661163c565b91018054156113df576113ce925054611300565b4210156113da57600090565b600190565b90504290557f850e821388cbf246fb93b12357651e23887c72f848742c21dbff137031b1356b6020604051428152a2600090565b50505050600190565b61143591925060e03d8111610936576109268183610e23565b903861136a565b91908203918211610f0357565b602460018060a01b038060025460081c169260e0604094855194858092632820036560e11b82528560048301525afa92831561158457600093611564575b50600052600660205282600020928051916114a183610deb565b84541682526001840154602083015261ffff806002860154169282810193845260a060ff600560038901549860608501998a5260048101546080860152015416151591015260a0840151600481101561154e576001036115445764496cebb8006115306115389361152b60609661151c6115419a514261143c565b92890195865191511690610ef0565b610ef0565b049051611300565b9101519061143c565b90565b5050505050600090565b634e487b7160e01b600052602160045260246000fd5b61157d91935060e03d8111610446576104378183610e23565b9138611487565b84513d6000823e3d90fd5b600480546040516317a3625360e31b81526001600160a01b039384169281019290925260248201939093529160209183916044918391165afa908115610f75576000916115da575090565b906020823d8211611600575b816115f360209383610e23565b8101031261020d57505190565b3d91506115e6565b61ffff16605a81101561163657604b81101561163057603c111561162b57603290565b604690565b50605090565b50605a90565b61ffff16605a81101561167057604b81101561166857603c1115611661576201518090565b6201fa4090565b506202a30090565b506203f4809056fea26469706673582212200dc63d9e8ca83f038b487682167e4a1152ed911652def410b2c90299a662086964736f6c63430008140033";

type CreditVaultV3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreditVaultV3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreditVaultV3__factory extends ContractFactory {
  constructor(...args: CreditVaultV3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    _oracle: AddressLike,
    _priceOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _registry,
      _oracle,
      _priceOracle,
      overrides || {}
    );
  }
  override deploy(
    _registry: AddressLike,
    _oracle: AddressLike,
    _priceOracle: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _registry,
      _oracle,
      _priceOracle,
      overrides || {}
    ) as Promise<
      CreditVaultV3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CreditVaultV3__factory {
    return super.connect(runner) as CreditVaultV3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreditVaultV3Interface {
    return new Interface(_abi) as CreditVaultV3Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CreditVaultV3 {
    return new Contract(address, _abi, runner) as unknown as CreditVaultV3;
  }
}
