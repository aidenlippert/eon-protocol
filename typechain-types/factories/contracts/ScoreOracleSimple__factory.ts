/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ScoreOracleSimple,
  ScoreOracleSimpleInterface,
} from "../../contracts/ScoreOracleSimple";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_registry",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "baseAPR",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "minAPR",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "maxAPR",
        type: "uint16",
      },
    ],
    name: "APRConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SCORE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_SCORE",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
    ],
    name: "computeScore",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "repayment",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "collateral",
            type: "uint8",
          },
          {
            internalType: "int16",
            name: "sybil",
            type: "int16",
          },
          {
            internalType: "uint8",
            name: "crossChain",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "participation",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "overall",
            type: "uint16",
          },
        ],
        internalType: "struct ScoreOracleSimple.ScoreBreakdown",
        name: "breakdown",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "score",
        type: "uint16",
      },
    ],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "aprBps",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minAPR",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract CreditRegistryV1_1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_baseAPR",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_minAPR",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "_maxAPR",
        type: "uint16",
      },
    ],
    name: "setAPRConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526000805465ffffffffffff60a01b1916643e8006401960a51b17905534801561002c57600080fd5b506040516109e03803806109e083398101604081905261004b91610126565b338061007257604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61007b816100d6565b506001600160a01b0381166100c55760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420726567697374727960801b6044820152606401610069565b6001600160a01b0316608052610156565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561013857600080fd5b81516001600160a01b038116811461014f57600080fd5b9392505050565b6080516108686101786000396000818161012f01526103bf01526108686000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637b103999116100715780637b1039991461012a5780638da5cb5b14610169578063c5d46dfc1461017a578063e0e79dde146101ec578063f2fde38b14610201578063fb4ceaa31461021457600080fd5b806327ff6223146100b957806340b89270146100da57806353704f9a146100e357806358ac0e80146100f857806370d7642b1461010d578063715018a614610122575b600080fd5b6100c261035281565b60405161ffff90911681526020015b60405180910390f35b6100c261012c81565b6000546100c290600160c01b900461ffff1681565b6000546100c290600160a01b900461ffff1681565b61012061011b36600461062a565b610227565b005b610120610359565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d1565b6000546001600160a01b0316610151565b61018d610188366004610675565b61036d565b6040516100d19190600060c08201905060ff835116825260ff6020840151166020830152604083015160010b604083015260ff606084015116606083015260ff608084015116608083015261ffff60a08401511660a083015292915050565b6000546100c290600160b01b900461ffff1681565b61012061020f366004610675565b610478565b6100c26102223660046106a5565b6104b6565b61022f61059d565b8261ffff168261ffff161061027d5760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21036b4b71020a82960891b60448201526064015b60405180910390fd5b8061ffff168361ffff16106102c65760405162461bcd60e51b815260206004820152600f60248201526e24b73b30b634b21036b0bc1020a82960891b6044820152606401610274565b6000805463ffffffff60a01b1916600160a01b61ffff86811691820261ffff60b01b191692909217600160b01b8684169081029190911761ffff60c01b1916600160c01b93861693840217909355604080519182526020820193909352918201527f083bbb36b45a0d300dab404594d8a73dce5f9a8cb6281e44051e0d6b3276ee509060600160405180910390a1505050565b61036161059d565b61036b60006105ca565b565b6040805160c081018252600080825260208201819052818301819052606082018190526080820181905260a082018190529151630d47875d60e41b81526001600160a01b0384811660048301529192917f0000000000000000000000000000000000000000000000000000000000000000169063d47875d09060240160c060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a91906106fb565b805190915061ffff166000036104475761012c60a0830152610453565b805161ffff1660a08301525b5060328082526020820152600060408201819052606082018190526080820152919050565b61048061059d565b6001600160a01b0381166104aa57604051631e4fbdf760e01b815260006004820152602401610274565b6104b3816105ca565b50565b600061012c61ffff8316108015906104d4575061035261ffff831611155b6105105760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642073636f726560981b6044820152606401610274565b600061052061012c6103526107be565b6000805461ffff9283169350909161054a91600160b01b8104821691600160c01b909104166107be565b61ffff1690506000828261056061012c886107be565b61ffff1661056e91906107e0565b61057891906107fd565b600054909150610594908290600160c01b900461ffff1661081f565b95945050505050565b6000546001600160a01b0316331461036b5760405163118cdaa760e01b8152336004820152602401610274565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61ffff811681146104b357600080fd5b60008060006060848603121561063f57600080fd5b833561064a8161061a565b9250602084013561065a8161061a565b9150604084013561066a8161061a565b809150509250925092565b60006020828403121561068757600080fd5b81356001600160a01b038116811461069e57600080fd5b9392505050565b6000602082840312156106b757600080fd5b813561069e8161061a565b80516106cd8161061a565b919050565b805160ff811681146106cd57600080fd5b805167ffffffffffffffff811681146106cd57600080fd5b600060c0828403121561070d57600080fd5b60405160c0810181811067ffffffffffffffff8211171561073e57634e487b7160e01b600052604160045260246000fd5b60405261074a836106c2565b8152610758602084016106d2565b6020820152610769604084016106d2565b604082015261077a606084016106c2565b606082015261078b608084016106e3565b608082015261079c60a084016106d2565b60a08201529392505050565b634e487b7160e01b600052601160045260246000fd5b61ffff8281168282160390808211156107d9576107d96107a8565b5092915050565b80820281158282048414176107f7576107f76107a8565b92915050565b60008261081a57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156107f7576107f76107a856fea26469706673582212208c6784b00b72992ccb032e17b41ba8cb9a2e94ec11788dfdf7c158204385dff964736f6c63430008140033";

type ScoreOracleSimpleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ScoreOracleSimpleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ScoreOracleSimple__factory extends ContractFactory {
  constructor(...args: ScoreOracleSimpleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_registry, overrides || {});
  }
  override deploy(
    _registry: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_registry, overrides || {}) as Promise<
      ScoreOracleSimple & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ScoreOracleSimple__factory {
    return super.connect(runner) as ScoreOracleSimple__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ScoreOracleSimpleInterface {
    return new Interface(_abi) as ScoreOracleSimpleInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ScoreOracleSimple {
    return new Contract(address, _abi, runner) as unknown as ScoreOracleSimple;
  }
}
